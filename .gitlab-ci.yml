stages:
  - build
  - package
  - deploy
build project:
  image: alpine
  stage: build
  script:
    - mkdir /build
    - apk update
    - apk add maven
    - mvn clean install
  artifacts:
    paths:
      - target/*.jar
build docker image:
  stage: package
  image: docker:25.0.3
  services:
    - docker:25.0.3-dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build -t $CI_REGISTRY_IMAGE -t $CI_REGISTRY_IMAGE:1 .
    - docker image ls
    - docker push --all-tags $CI_REGISTRY_IMAGE
deploy to production:
  image:
    name: amazon/aws-cli:2.15.25
    entrypoint: [""]
  stage: deploy
  environment: production
  script:
    - aws --version
    - apk add --no-cache gettext
    - export DEPLOY_TOKEN=$(echo $GITLAB_DEPLOY_TOKEN | td -d "\n | base64)
    - envsubst < templates/Dockerrun.aws.json > Dockerrun.aws.json
    - envsubst < templates/auth.json > auth.json
    - cat Dockerrun.aws.json
    - cat auth.json
    - aws s3 cp Dockerrun.aws.json s3://$AWS_S3_BUCKET/Dockerrun.aws.json
    - aws s3 cp config.json s3://$AWS_S3_BUCKET/config.json